<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADi
        DAAAAk1TRnQBSQFMAgEBAwEAARQBAAEUAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEBoAAwIBAwMNAREDFgEfAxgBIQMQARYDBAEGAwABAQMAAQEoAAHMAgAB/wGB
        AgAB/wFmAjMB/wNVAf8BZgIzAf8BZgIzAf8BgQIAAf8BzAIAAf+YAAMNARIBMAIvAUsBRAJAAXsBRQJB
        AX4BOgI4AWADIwE0AxkBIwMSARkDBwEKAwEBAgMAAQEYAAGBAgAB/wGkAqAB/wPxBf8D4wH/A8AB/wKZ
        AcwB/wOGAf8DXwH/AYECAAH/FAABmQJmAf8BmQJmAf8BmQJmAf8BmQJmAf8BmQJmAf8BmQJmAf8BmQJm
        Af8BmQJmAf8BmQJmAf8BmQJmAf8BmQJmAf8BmQJmAf9MAAMDAQQBQQI/AXIBJAFUAXUB8AE8AUwBXQHi
        AVEBRAFHAbYBTwJEAaYBTAJDAZMBRwJDAYMBPQI7AWkDKgFAAxwBJwMSARkDBQEHAwABAQwAAWYCMwH/
        A/EJ/wPqAf8DywH/AaQCoAH/A4YB/wOWAf8BkAGpAa0B/wN3Af8BZgEzAQAB/xAAAZkCZgX/A/EB/wPx
        Af8D8QH/A/EB/wPxAf8D8QH/A/EB/wPxAv8B7AHMAf8BmQJmAf9MAAMLAQ8BLQGHAbEB/AEAAXoBrQH/
        AUwB2QH3Af8BDAGjAdIB/wELAXkBpgH8ATcBUQFmAecBTwFEAUgBwgFPAkUBoAFNAkQBmAFIAkIBiAE8
        AjsBaAMlATcDFQEdAwUBBwQAAYECAAH/A/ER/wPjAf8CmQHMAf8DsgH/AZABqQGtAf8BZgKZAf8BZgGZ
        AWYB/wFmAZkBZgH/AYECAAH/DAABmQJmBf8B8AHKAaYB/wHwAcoBpgH/AfABygGmAf8B8AHKAaYB/wHw
        AcoBpgH/AfABygGmAf8B8AHKAaYB/wHwAcoBpgH/A/EB/wGZAmYB/0gAAwIBAwFCAj8BdAEgAX4BqwH8
        AQABfQGwAf8BkAHvAv8BMAHgAv8BKQHiAv8BHQHLAe4B/wEPAaQB0gH/AQkBfwGvAf4BKAFYAXYB7wFQ
        AUUBSgHFAU8CQwGoAU0CRAGUAT4CPQFsAxQBHAHMAgAB/wOyEf8D6gH/A8AB/wKZAcwB/wGZAswB/wGZ
        AswB/wOWAf8BZgGZAWYB/wOGAf8DZgH/AcwCAAH/CAACmQFmBf8DywH/A8sB/wPLAf8B8AHKAaYB/wHw
        AcoBpgH/AfABygGmAf8B8AHKAaYB/wHwAcoBpgH/A/EB/wGZAmYB/0gAAwoBDQFSAUgBTAG3ATsBnwHG
        Af8BAAGBAbIB/wGfAfEC/wFGAeIC/wFAAeEC/wE6AeAC/wE0AeAC/wEzAeIC/wEtAdAB7gH/ASABsQHd
        Af8BDAGGAbYB/wE3AU0BYQHmAUsCRAGOAxsBJgHMAjMB/wPxDf8DzAH/A8wB/wHwAcoBpgH/AfABygGm
        Af8DzAH/AZkBzAGZAf8BmQHMAZkB/wOZAf8BmQFmAZkB/wOWAf8BgQIAAf8IAAKZAWYF/wPMAf8DzAH/
        A8sB/wHwAcoBpgH/AfABygGmAf8B8AHKAaYB/wHwAcoBpgH/AfABygGmAf8D8QH/AZkCZgH/SAABOgI5
        AWABLwFdAX4B7QG2AfUB+wH/AQABgQG0Af8BsAH3Av8BXgHsAv8BWAHpAv8BUgHnAv8BSwHkAv8BRQHi
        Av8BRQHgAv8BRgHiAv8BPwHPAfAB/wEAAW0BoAH/AUsCRAGRAxwBJwGZAmYF/wPqBf8D6gH/A8wB/wHw
        AcoBpgH/A5YB/wOWAv8CmQH/A8wB/wHMApkB/wHMApkB/wGkAqAB/wOyAf8BZgIzAf8IAAKZAWYF/wPM
        Af8DzAH/A8sB/wPLAf8B8AHKAaYB/wHwAcoBpgH/AfABygGmAf8B8AHKAaYB/wPxAf8BmQJmAf9IAAFO
        AUYBSAGfAUgBkwGvAfoB3QP/AQABhAG3Af8BwAH8Av8BdwH0Av8BcAHxAv8BagHvAv8BYwHsAv8BXAHq
        Av8BWAHpAv8BVgHkAf4B/wFkAdoB7QH/AQABbwGiAf8BSwJDAZIDHAEnA3cF/wPXAf8D6gH/A/EB/wHw
        AcoBpgH/A5YB/wHMAjMB/wHMAjMB/wOWAf8B8AHKAaYB/wPAAf8DywH/A8AB/wPLAf8DdwH/CAACmQFm
        Bf8DzAH/A8sB/wPLAf8DywH/AfABygGmAf8B8AHKAaYB/wHwAcoBpgH/AfABygGmAf8D8QH/AZkCZgH/
        SAABTQFMAVQBywGrAdwB6gH/AeUD/wEAAYYBuQH/AdED/wGOAf0C/wGJAfoC/wGCAfYC/wF6AfQC/wFz
        AfMC/wFsAfAC/wFMAckB4wH/AaoD/wEAAXIBpQH/AUsCQwGSAxwBJwOBAf8D8QH/A8wB/wPdAf8D8QL/
        AswB/wGZAmYB/wQAAcwCAAH/A5YC/wLMAf8D8QH/A+MB/wPMAf8D1wH/A4EB/wgAA5YZ/wP4Af8D+AH/
        A/gB/wPxAf8BmQJmAf9IAAElAWoBhwHwAcoB9QH6Af8B8QP/AQABiAG7Af8B3AP/AaED/wGcAfsC/wGU
        AfkC/wGMAfcC/wGFAfYC/wGAAfUC/wFdAcsB3wH/AdED/wEAAXQBpwH/AUsCQwGSAxwBJwNfAf8D8QH/
        A8sB/wPAAf8D6gH/AfABygGmAv8CzAH/AZkCZgH/AZkCZgL/AswB/wPjCf8D6gH/A+oB/wGZAmYB/wgA
        A5YF/wPMAf8DzAH/A8wB/wPMAf8DywH/AfABygGmAf8B8AHKAaYB/wHwAcoBpgH/A/EB/wGZAmYB/0gA
        AQ4BhQGuAfsBFAGNAbsB/gGAAcQB3QH/AQABigG9Af8BwwHtAfUB/wF6AdsB6gH/AYUB4wHvAf8BkgHw
        AfgB/wGcAfoC/wGUAfgC/wFlAdIB5wH/AaoB9AH5Af8B2gP/AQABdwGqAf8BSwJDAZIDHAEnAZkCMwH/
        A90B/wHMApkB/wHMApkB/wPXAf8D8QH/AfABygGmAv8CzAH/AfABygGmAf8D1wH/A/EN/wP4Af8BmQIz
        Af8IAAHMApkd/wP4Af8D8QH/A+oB/wGZAmYB/08AAQEDAAEBAQABjQHAAf8B8gP/AcgB9wH7Af8BqwHn
        AfEB/wGBAdQB5gH/AWsBxwHfAf8BZQHGAd8B/wFfAcIB2wH/AdMD/wHnA/8BAAF5AawB/wFLAkMBkgMc
        AScBzAIAAf8BpAKgAf8DzAH/A8AB/wGZAcwBmQH/AdYC5wH/AfAB+wL/A90B/wPqFf8DzAH/AcwCAAH/
        CAABzAKZHf8CmQFmAf8CmQFmAf8CmQFmAf8CmQFmAf9UAAFEAVQBYwHZATEBpQHNAf8BSgGwAdMB/wGD
        Ac0B4gH/AdAB7wH2Af8B5gL8Af8B8QP/AeYD/wHeA/8B8wP/AQABfAGvAf8BSwJEAZEDHAEnBAABmQIz
        Af8D1wH/AcAB3AHAAf8BwAHcAcAB/wHAAdwBwAH/A8wB/wHGAdYB7wH/A/EV/wGZAjMB/wwAAcwCmR3/
        ApkBZgH/A+oB/wHMAZkBZgH/AcwCMwH/WwABAQMoAT0BRgFCAUMBgQFRAUkBTgG4AkwBVgHNARwBggGz
        AfwM/wEAAYABsQH/AUgCQgGIAxoBJAgAAWYCMwH/A9cB/wHGAdYB7wH/A8sB/wPAAf8DywH/A+MB/wPx
        Df8BmQJmAf8QAAHMApkd/wKZAWYB/wHMAZkBZgH/AcwCMwH/bwABAQEYAXMBmAH2Ae0B9gH6Cf8BAAGA
        AbEB/wE3AjYBWwMQARYMAAFmAjMB/wPAAf8D1wH/A9cB/wPjAf8D6gn/A9cB/wGZAjMB/xQAAcwCmQH/
        AcwCmQH/AcwCmQH/AcwCmQH/AcwBmQFmAf8BzAGZAWYB/wKZAWYB/wKZAWYB/wKZAWYB/wHMAjMB/3QA
        AVABSQFPAbsBAAGGAbkB/wEAAYQBtwH/AQABggG1Af8BTwFGAUgBogMRARcDBAEFEAABzAIAAf8BZgIz
        Af8BmQJmAf8BpAKgAf8BpAKgAf8DhgH/AZkCMwH/AcwCAAH/kAABQgFNAT4HAAE+AwABKAMAAUADAAEQ
        AwABAQEAAQEFAAGAFwAD/wEAAcABPwHwAQ8C/wIAAcABBwHgAQcBwAEDAgABgAEBAcABAwHAAQMCAAGA
        AQABgAEBAcABAwYAAcABAwYAAcABAwYAAcABAwYAAcABAwQAAQEBAAHAAQMGAAHAAQMGAAHAAQMCAAGA
        AwABwAEDAgAB4AEAAYABAQHAAQMCAAHwAQABwAEDAcABBwIAAf8BAAHgAQcBwAEPAgAB/wGAAfABDwL/
        AgAL
</value>
  </data>
</root>