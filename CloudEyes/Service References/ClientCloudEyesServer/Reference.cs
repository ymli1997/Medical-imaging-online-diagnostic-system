//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace CloudEyes.ClientCloudEyesServer {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ClientCloudEyesServer.CloudEyesSoap")]
    public interface CloudEyesSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/root", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool root(string jsonData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/root", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> rootAsync(string jsonData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Login", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Login(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Login", ReplyAction="*")]
        System.Threading.Tasks.Task<string> LoginAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllReport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetAllReport();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllReport", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetAllReportAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetReportsByAuditUserID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetReportsByAuditUserID(decimal AuditUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetReportsByAuditUserID", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetReportsByAuditUserIDAsync(decimal AuditUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetReportInfoByRetrieval", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetReportInfoByRetrieval(string retrievalMassage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetReportInfoByRetrieval", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetReportInfoByRetrievalAsync(string retrievalMassage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetReportsByUserID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetReportsByUserID(decimal UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetReportsByUserID", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetReportsByUserIDAsync(decimal UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetReportInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetReportInfo(decimal report_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetReportInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetReportInfoAsync(decimal report_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendMessage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SendMessage(string jsonData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendMessage", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> SendMessageAsync(string jsonData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMessage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetMessage(decimal sender_Id, decimal receiver_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMessage", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetMessageAsync(decimal sender_Id, decimal receiver_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UploadInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool UploadInfo(decimal report_id, string jsonData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UploadInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> UploadInfoAsync(decimal report_id, string jsonData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DataAnalys", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string DataAnalys(decimal report_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DataAnalys", ReplyAction="*")]
        System.Threading.Tasks.Task<string> DataAnalysAsync(decimal report_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DicomUpload", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool DicomUpload(string jsonData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DicomUpload", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> DicomUploadAsync(string jsonData);
        
        // CODEGEN: 参数“fs”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UploadFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        CloudEyes.ClientCloudEyesServer.UploadFileResponse UploadFile(CloudEyes.ClientCloudEyesServer.UploadFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UploadFile", ReplyAction="*")]
        System.Threading.Tasks.Task<CloudEyes.ClientCloudEyesServer.UploadFileResponse> UploadFileAsync(CloudEyes.ClientCloudEyesServer.UploadFileRequest request);
        
        // CODEGEN: 参数“DownloadFileResult”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DownloadFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        CloudEyes.ClientCloudEyesServer.DownloadFileResponse DownloadFile(CloudEyes.ClientCloudEyesServer.DownloadFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DownloadFile", ReplyAction="*")]
        System.Threading.Tasks.Task<CloudEyes.ClientCloudEyesServer.DownloadFileResponse> DownloadFileAsync(CloudEyes.ClientCloudEyesServer.DownloadFileRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadFile", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UploadFileRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] fs;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string path;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string fileName;
        
        public UploadFileRequest() {
        }
        
        public UploadFileRequest(byte[] fs, string path, string fileName) {
            this.fs = fs;
            this.path = path;
            this.fileName = fileName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadFileResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UploadFileResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool UploadFileResult;
        
        public UploadFileResponse() {
        }
        
        public UploadFileResponse(bool UploadFileResult) {
            this.UploadFileResult = UploadFileResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DownloadFile", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DownloadFileRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string strFilePath;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string path;
        
        public DownloadFileRequest() {
        }
        
        public DownloadFileRequest(string strFilePath, string path) {
            this.strFilePath = strFilePath;
            this.path = path;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DownloadFileResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DownloadFileResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] DownloadFileResult;
        
        public DownloadFileResponse() {
        }
        
        public DownloadFileResponse(byte[] DownloadFileResult) {
            this.DownloadFileResult = DownloadFileResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface CloudEyesSoapChannel : CloudEyes.ClientCloudEyesServer.CloudEyesSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CloudEyesSoapClient : System.ServiceModel.ClientBase<CloudEyes.ClientCloudEyesServer.CloudEyesSoap>, CloudEyes.ClientCloudEyesServer.CloudEyesSoap {
        
        public CloudEyesSoapClient() {
        }
        
        public CloudEyesSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CloudEyesSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CloudEyesSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CloudEyesSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool root(string jsonData) {
            return base.Channel.root(jsonData);
        }
        
        public System.Threading.Tasks.Task<bool> rootAsync(string jsonData) {
            return base.Channel.rootAsync(jsonData);
        }
        
        public string Login(string username, string password) {
            return base.Channel.Login(username, password);
        }
        
        public System.Threading.Tasks.Task<string> LoginAsync(string username, string password) {
            return base.Channel.LoginAsync(username, password);
        }
        
        public string GetAllReport() {
            return base.Channel.GetAllReport();
        }
        
        public System.Threading.Tasks.Task<string> GetAllReportAsync() {
            return base.Channel.GetAllReportAsync();
        }
        
        public string GetReportsByAuditUserID(decimal AuditUserID) {
            return base.Channel.GetReportsByAuditUserID(AuditUserID);
        }
        
        public System.Threading.Tasks.Task<string> GetReportsByAuditUserIDAsync(decimal AuditUserID) {
            return base.Channel.GetReportsByAuditUserIDAsync(AuditUserID);
        }
        
        public string GetReportInfoByRetrieval(string retrievalMassage) {
            return base.Channel.GetReportInfoByRetrieval(retrievalMassage);
        }
        
        public System.Threading.Tasks.Task<string> GetReportInfoByRetrievalAsync(string retrievalMassage) {
            return base.Channel.GetReportInfoByRetrievalAsync(retrievalMassage);
        }
        
        public string GetReportsByUserID(decimal UserID) {
            return base.Channel.GetReportsByUserID(UserID);
        }
        
        public System.Threading.Tasks.Task<string> GetReportsByUserIDAsync(decimal UserID) {
            return base.Channel.GetReportsByUserIDAsync(UserID);
        }
        
        public string GetReportInfo(decimal report_Id) {
            return base.Channel.GetReportInfo(report_Id);
        }
        
        public System.Threading.Tasks.Task<string> GetReportInfoAsync(decimal report_Id) {
            return base.Channel.GetReportInfoAsync(report_Id);
        }
        
        public bool SendMessage(string jsonData) {
            return base.Channel.SendMessage(jsonData);
        }
        
        public System.Threading.Tasks.Task<bool> SendMessageAsync(string jsonData) {
            return base.Channel.SendMessageAsync(jsonData);
        }
        
        public string GetMessage(decimal sender_Id, decimal receiver_Id) {
            return base.Channel.GetMessage(sender_Id, receiver_Id);
        }
        
        public System.Threading.Tasks.Task<string> GetMessageAsync(decimal sender_Id, decimal receiver_Id) {
            return base.Channel.GetMessageAsync(sender_Id, receiver_Id);
        }
        
        public bool UploadInfo(decimal report_id, string jsonData) {
            return base.Channel.UploadInfo(report_id, jsonData);
        }
        
        public System.Threading.Tasks.Task<bool> UploadInfoAsync(decimal report_id, string jsonData) {
            return base.Channel.UploadInfoAsync(report_id, jsonData);
        }
        
        public string DataAnalys(decimal report_id) {
            return base.Channel.DataAnalys(report_id);
        }
        
        public System.Threading.Tasks.Task<string> DataAnalysAsync(decimal report_id) {
            return base.Channel.DataAnalysAsync(report_id);
        }
        
        public bool DicomUpload(string jsonData) {
            return base.Channel.DicomUpload(jsonData);
        }
        
        public System.Threading.Tasks.Task<bool> DicomUploadAsync(string jsonData) {
            return base.Channel.DicomUploadAsync(jsonData);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CloudEyes.ClientCloudEyesServer.UploadFileResponse CloudEyes.ClientCloudEyesServer.CloudEyesSoap.UploadFile(CloudEyes.ClientCloudEyesServer.UploadFileRequest request) {
            return base.Channel.UploadFile(request);
        }
        
        public bool UploadFile(byte[] fs, string path, string fileName) {
            CloudEyes.ClientCloudEyesServer.UploadFileRequest inValue = new CloudEyes.ClientCloudEyesServer.UploadFileRequest();
            inValue.fs = fs;
            inValue.path = path;
            inValue.fileName = fileName;
            CloudEyes.ClientCloudEyesServer.UploadFileResponse retVal = ((CloudEyes.ClientCloudEyesServer.CloudEyesSoap)(this)).UploadFile(inValue);
            return retVal.UploadFileResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<CloudEyes.ClientCloudEyesServer.UploadFileResponse> CloudEyes.ClientCloudEyesServer.CloudEyesSoap.UploadFileAsync(CloudEyes.ClientCloudEyesServer.UploadFileRequest request) {
            return base.Channel.UploadFileAsync(request);
        }
        
        public System.Threading.Tasks.Task<CloudEyes.ClientCloudEyesServer.UploadFileResponse> UploadFileAsync(byte[] fs, string path, string fileName) {
            CloudEyes.ClientCloudEyesServer.UploadFileRequest inValue = new CloudEyes.ClientCloudEyesServer.UploadFileRequest();
            inValue.fs = fs;
            inValue.path = path;
            inValue.fileName = fileName;
            return ((CloudEyes.ClientCloudEyesServer.CloudEyesSoap)(this)).UploadFileAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CloudEyes.ClientCloudEyesServer.DownloadFileResponse CloudEyes.ClientCloudEyesServer.CloudEyesSoap.DownloadFile(CloudEyes.ClientCloudEyesServer.DownloadFileRequest request) {
            return base.Channel.DownloadFile(request);
        }
        
        public byte[] DownloadFile(string strFilePath, string path) {
            CloudEyes.ClientCloudEyesServer.DownloadFileRequest inValue = new CloudEyes.ClientCloudEyesServer.DownloadFileRequest();
            inValue.strFilePath = strFilePath;
            inValue.path = path;
            CloudEyes.ClientCloudEyesServer.DownloadFileResponse retVal = ((CloudEyes.ClientCloudEyesServer.CloudEyesSoap)(this)).DownloadFile(inValue);
            return retVal.DownloadFileResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<CloudEyes.ClientCloudEyesServer.DownloadFileResponse> CloudEyes.ClientCloudEyesServer.CloudEyesSoap.DownloadFileAsync(CloudEyes.ClientCloudEyesServer.DownloadFileRequest request) {
            return base.Channel.DownloadFileAsync(request);
        }
        
        public System.Threading.Tasks.Task<CloudEyes.ClientCloudEyesServer.DownloadFileResponse> DownloadFileAsync(string strFilePath, string path) {
            CloudEyes.ClientCloudEyesServer.DownloadFileRequest inValue = new CloudEyes.ClientCloudEyesServer.DownloadFileRequest();
            inValue.strFilePath = strFilePath;
            inValue.path = path;
            return ((CloudEyes.ClientCloudEyesServer.CloudEyesSoap)(this)).DownloadFileAsync(inValue);
        }
    }
}
