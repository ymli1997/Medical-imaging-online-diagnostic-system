//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace CloudDiagnosis.ClientCloudEyesSever {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ClientCloudEyesSever.CloudEyesSoap")]
    public interface CloudEyesSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/root", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool root(string jsonData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/root", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> rootAsync(string jsonData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Login", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Login(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Login", ReplyAction="*")]
        System.Threading.Tasks.Task<string> LoginAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Flash", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Flash();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Flash", ReplyAction="*")]
        System.Threading.Tasks.Task<string> FlashAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetInfo(decimal AuditUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetInfoAsync(decimal AuditUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetReportInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetReportInfo(decimal report_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetReportInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetReportInfoAsync(decimal report_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendMessage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SendMessage(string jsonData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendMessage", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> SendMessageAsync(string jsonData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMessage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetMessage(decimal sender_Id, decimal receiver_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMessage", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetMessageAsync(decimal sender_Id, decimal receiver_Id);
        
        // CODEGEN: 参数“fileBytes”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendPicture", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        CloudDiagnosis.ClientCloudEyesSever.SendPictureResponse SendPicture(CloudDiagnosis.ClientCloudEyesSever.SendPictureRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendPicture", ReplyAction="*")]
        System.Threading.Tasks.Task<CloudDiagnosis.ClientCloudEyesSever.SendPictureResponse> SendPictureAsync(CloudDiagnosis.ClientCloudEyesSever.SendPictureRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPicture", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void GetPicture(string report_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPicture", ReplyAction="*")]
        System.Threading.Tasks.Task GetPictureAsync(string report_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UploadInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool UploadInfo(decimal report_id, string jsonData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UploadInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> UploadInfoAsync(decimal report_id, string jsonData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DataAnalys", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void DataAnalys();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DataAnalys", ReplyAction="*")]
        System.Threading.Tasks.Task DataAnalysAsync();
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SendPicture", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SendPictureRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] fileBytes;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string fileName;
        
        public SendPictureRequest() {
        }
        
        public SendPictureRequest(byte[] fileBytes, string fileName) {
            this.fileBytes = fileBytes;
            this.fileName = fileName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SendPictureResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SendPictureResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool SendPictureResult;
        
        public SendPictureResponse() {
        }
        
        public SendPictureResponse(bool SendPictureResult) {
            this.SendPictureResult = SendPictureResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface CloudEyesSoapChannel : CloudDiagnosis.ClientCloudEyesSever.CloudEyesSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CloudEyesSoapClient : System.ServiceModel.ClientBase<CloudDiagnosis.ClientCloudEyesSever.CloudEyesSoap>, CloudDiagnosis.ClientCloudEyesSever.CloudEyesSoap {
        
        public CloudEyesSoapClient() {
        }
        
        public CloudEyesSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CloudEyesSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CloudEyesSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CloudEyesSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool root(string jsonData) {
            return base.Channel.root(jsonData);
        }
        
        public System.Threading.Tasks.Task<bool> rootAsync(string jsonData) {
            return base.Channel.rootAsync(jsonData);
        }
        
        public string Login(string username, string password) {
            return base.Channel.Login(username, password);
        }
        
        public System.Threading.Tasks.Task<string> LoginAsync(string username, string password) {
            return base.Channel.LoginAsync(username, password);
        }
        
        public string Flash() {
            return base.Channel.Flash();
        }
        
        public System.Threading.Tasks.Task<string> FlashAsync() {
            return base.Channel.FlashAsync();
        }
        
        public string GetInfo(decimal AuditUserID) {
            return base.Channel.GetInfo(AuditUserID);
        }
        
        public System.Threading.Tasks.Task<string> GetInfoAsync(decimal AuditUserID) {
            return base.Channel.GetInfoAsync(AuditUserID);
        }
        
        public string GetReportInfo(decimal report_Id) {
            return base.Channel.GetReportInfo(report_Id);
        }
        
        public System.Threading.Tasks.Task<string> GetReportInfoAsync(decimal report_Id) {
            return base.Channel.GetReportInfoAsync(report_Id);
        }
        
        public bool SendMessage(string jsonData) {
            return base.Channel.SendMessage(jsonData);
        }
        
        public System.Threading.Tasks.Task<bool> SendMessageAsync(string jsonData) {
            return base.Channel.SendMessageAsync(jsonData);
        }
        
        public string GetMessage(decimal sender_Id, decimal receiver_Id) {
            return base.Channel.GetMessage(sender_Id, receiver_Id);
        }
        
        public System.Threading.Tasks.Task<string> GetMessageAsync(decimal sender_Id, decimal receiver_Id) {
            return base.Channel.GetMessageAsync(sender_Id, receiver_Id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CloudDiagnosis.ClientCloudEyesSever.SendPictureResponse CloudDiagnosis.ClientCloudEyesSever.CloudEyesSoap.SendPicture(CloudDiagnosis.ClientCloudEyesSever.SendPictureRequest request) {
            return base.Channel.SendPicture(request);
        }
        
        public bool SendPicture(byte[] fileBytes, string fileName) {
            CloudDiagnosis.ClientCloudEyesSever.SendPictureRequest inValue = new CloudDiagnosis.ClientCloudEyesSever.SendPictureRequest();
            inValue.fileBytes = fileBytes;
            inValue.fileName = fileName;
            CloudDiagnosis.ClientCloudEyesSever.SendPictureResponse retVal = ((CloudDiagnosis.ClientCloudEyesSever.CloudEyesSoap)(this)).SendPicture(inValue);
            return retVal.SendPictureResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<CloudDiagnosis.ClientCloudEyesSever.SendPictureResponse> CloudDiagnosis.ClientCloudEyesSever.CloudEyesSoap.SendPictureAsync(CloudDiagnosis.ClientCloudEyesSever.SendPictureRequest request) {
            return base.Channel.SendPictureAsync(request);
        }
        
        public System.Threading.Tasks.Task<CloudDiagnosis.ClientCloudEyesSever.SendPictureResponse> SendPictureAsync(byte[] fileBytes, string fileName) {
            CloudDiagnosis.ClientCloudEyesSever.SendPictureRequest inValue = new CloudDiagnosis.ClientCloudEyesSever.SendPictureRequest();
            inValue.fileBytes = fileBytes;
            inValue.fileName = fileName;
            return ((CloudDiagnosis.ClientCloudEyesSever.CloudEyesSoap)(this)).SendPictureAsync(inValue);
        }
        
        public void GetPicture(string report_Id) {
            base.Channel.GetPicture(report_Id);
        }
        
        public System.Threading.Tasks.Task GetPictureAsync(string report_Id) {
            return base.Channel.GetPictureAsync(report_Id);
        }
        
        public bool UploadInfo(decimal report_id, string jsonData) {
            return base.Channel.UploadInfo(report_id, jsonData);
        }
        
        public System.Threading.Tasks.Task<bool> UploadInfoAsync(decimal report_id, string jsonData) {
            return base.Channel.UploadInfoAsync(report_id, jsonData);
        }
        
        public void DataAnalys() {
            base.Channel.DataAnalys();
        }
        
        public System.Threading.Tasks.Task DataAnalysAsync() {
            return base.Channel.DataAnalysAsync();
        }
    }
}
